import javax.swing.*;
import java.awt.event.*;
import java.awt.*;

class MyBtn extends JButton{
  private MyFrame frame;
  MyBtn(MyFrame frame, boolean state){
    super();
    this.frame=frame;
    String PicPath;
    String btName;
    if(state){
      PicPath="D:\\Java\\Yes.jpg";
      btName="Yes";
      addActionListener(new HandlerYes(frame));
      }
    else{
      PicPath="D:\\Java\\No.jpg";
      btName="No";
      addActionListener(new HandlerNo());
    }
  Icon icn=new ImageIcon(PicPath);
  setIcon(icn);
  setText(btName);
  setFocusPainted(false);
  
  int w=frame.getWidth()/4;
  int h=frame.getHeight()/8;
  setSize(w,h);
  int x=frame.getWidth()/4,y=frame.getHeight()-h-50;
  if(!state) x+=w+50;
  setLocation(x,y);
  frame.add(this);  
  }
}

class MyIconLabel extends JLabel{
  private MyFrame frame;
  MyIconLabel(MyFrame frame){
    super();
    this.frame=frame;
    ImageIcon icn=new ImageIcon("D:\\Java\\rabbit.jpg");
    setIcon(icn);
    setBounds(5,15,frame.getWidth()/4-10,frame.getHeight()-30);
    frame.add(this);
  }
}

class MyMenu extends JMenuBar{
  private MyFrame frame;
  MyMenu(MyFrame frame){
    super();
    this.frame=frame;
    JMenu wind = new JMenu("Window");
    JMenuItem apply=new JMenuItem("Apply");
    JMenuItem exit=new JMenuItem("Exit");
    apply.addActionListener(new HandlerYes(frame));
    exit.addActionListener(new HandlerNo());
    wind.add(apply);
    wind.add(exit);
    add(wind);
    JMenu horiz=new JMenu("Horizontal");
    JMenuItem left=new JMenuItem("Left");
    JMenuItem right=new JMenuItem("Right");
    JMenuItem hnone=new JMenuItem("None");
    horiz.add(left);
    horiz.add(right);
    horiz.add(hnone);
    add(horiz);
    left.addActionListener(new MenuHandler(frame,true));
    right.addActionListener(new MenuHandler(frame,true));
    hnone.addActionListener(new MenuHandler(frame,true));
    JMenu vert=new JMenu("Vertical");
    JMenuItem up=new JMenuItem("Up");
    JMenuItem down=new JMenuItem("Down");
    JMenuItem vnone=new JMenuItem("None");
    vert.add(up);
    vert.add(down);
    vert.add(vnone);
    up.addActionListener(new MenuHandler(frame,false));
    down.addActionListener(new MenuHandler(frame,false));
    vnone.addActionListener(new MenuHandler(frame,false));
    add(vert);
    setBounds(1,1,frame.getWidth()-1,frame.getHeight()/10);
    frame.add(this);
  }
}

class MyPanel extends JPanel{
  public JLabel Hlbl;
  public JLabel Vlbl;
    MyPanel(){
      super();
      JLabel L1=new JLabel("Horizontal move: ");
      JLabel L2=new JLabel("Vertical move: ");
      Hlbl=new JLabel("on hold");
      Vlbl=new JLabel("on hold");
      setLayout(new GridLayout(2,2,3,3));
      add(L1);
      add(L2);
      add(Hlbl);
      add(Vlbl);
    }
}

class MyFrame extends JFrame{
  public MyPanel move;
  private int[] step;
  public void setH(int i){
    step[0]=i;
  }
  public void setV(int i){
    step[1]=i;
  }
  MyFrame(String text,int w,int h){
    super();
    step =new int[]{0,0};
    setTitle(text);
    setBounds(400,300,w,h);
    setLayout(null);
    setDefaultCloseOperation(EXIT_ON_CLOSE);
    new MyBtn(this,true);
    new MyBtn(this,false);
    new MyMenu(this);
    new MyIconLabel(this);
    JLabel msg=new JLabel("Do you want to move?");
    msg.setBounds(getWidth()/4,15,3*getWidth()/4-10,getHeight()/4-5);
    Font fnt=new Font("Arial",Font.BOLD,18);
    msg.setFont(fnt);
    add(msg);
    move = new MyPanel();
    move.setBounds(msg.getX(),msg.getY()+msg.getHeight()+1,msg.getWidth(),msg.getHeight());
    add(move);
    setResizable(false);
    setVisible(true);
  }
  void handler(){
    setLocation(getX()+step[0],getY()+step[1]);
  }

}

class HandlerNo implements ActionListener{
  public void actionPerformed(ActionEvent ae){
    System.exit(0);
  }
}
class HandlerYes implements ActionListener{
  private MyFrame frame;
  HandlerYes(MyFrame frame){
    this.frame=frame;
  }
  public void actionPerformed(ActionEvent ae){
    frame.handler();
    }
}

class MenuHandler implements ActionListener{
  private MyFrame frame;
  private boolean dir;
  MenuHandler(MyFrame frame,boolean dir){
    this.frame=frame;
    this.dir=dir;
  }
  public void actionPerformed(ActionEvent ae){
    String cmd=ae.getActionCommand();
    if(dir){
      frame.move.Hlbl.setText(cmd.toLowerCase());
      if(cmd.equalsIgnoreCase("Right")) frame.setH(50);
      else if(cmd.equalsIgnoreCase("Left")) frame.setH(-50);
            else frame.setH(0);
    }
    else{
      frame.move.Vlbl.setText(cmd.toLowerCase());
      if(cmd.equalsIgnoreCase("Up")) frame.setV(-50);
      else if(cmd.equalsIgnoreCase("Down")) frame.setV(50);
            else frame.setV(0);
    }
  }
}
public class Main {
  public static void main(String[] args) {
    new MyFrame(" Srvice Window Mover \"Fast Rabbit\"...",380,180);
  }
}